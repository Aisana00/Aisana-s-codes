Представьте, что класс - это анкета для приема на работу:

__init__ - это процесс заполнения анкеты когда вас принимают на работу

Без __init__ у вас была бы пустая анкета без имени и должности

Сравним два варианта:
❌ Без __init__ (плохо):
python
class Student:
    pass

# Создаем студента
student = Student()
# У студента нет имени и возраста!
# Это как заполнять пустой бланк каждый раз вручную
✅ С __init__ (правильно):
python
class Student:
    def __init__(self, name, age):
        self.name = name  # Автоматически заполняем имя
        self.age = age    # Автоматически заполняем возраст

# Создаем студента - сразу указываем данные
student = Student("Анна", 20)
# У студента УЖЕ есть имя "Анна" и возраст 20
Почему __init__ обязателен?
Автоматическая инициализация - данные заполняются сразу при создании

Гарантия - у каждого объекта будут нужные поля

Удобство - не нужно заполнять данные отдельно

Пример без __init__ (сложно):
python
class Student:
    pass

student = Student()
student.name = "Анна"    # Приходится заполнять вручную
student.age = 20         # Легко забыть или ошибиться
Пример с __init__ (просто):
python
class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age

student = Student("Анна", 20)  # Все данные сразу на месте!
Что означает __init__?
__ с двух сторон означает "специальный метод"

init - сокращение от "initialize" (инициализировать - готовить к работе)

self - ссылка на сам объект

name, age - параметры, которые мы передаем

Вывод: __init__ как паспорт - без него объект "неполноценный" и с ним сложно работать!